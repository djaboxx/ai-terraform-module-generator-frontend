version: '3.8'

services:
  redis:
    image: redis:alpine
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT:-8080}:80"
      - "${NGINX_SSL_PORT:-8443}:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - backend
    networks:
      default:
        aliases:
          - registry.local

  postgres:
    image: postgres:14-alpine
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER:-admin}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-adminpass}
      - POSTGRES_DB=${DB_NAME:-moduledb}
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-admin} -d ${DB_NAME:-moduledb}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ../ai-terraform-module-generator-backend
    expose:
      - "8000"
    ports:
      - "${BACKEND_PORT:-8100}:8000"
    volumes:
      - ../ai-terraform-module-generator-backend:/app
      - ../ai-terraform-module-generator-backend/module_storage:/app/module_storage
      - ../ai-terraform-module-generator-backend/modules.db:/app/modules.db
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - PYTHONPATH=/app
      - REGISTRY_DOMAIN=registry.local
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-here}
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build: .
    ports:
      - "${PORT:-5100}:5000"
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - DB_HOST=${DB_HOST:-postgres}
      - DB_USER=${DB_USER:-admin}
      - DB_PASSWORD=${DB_PASSWORD:-adminpass}
      - DB_NAME=${DB_NAME:-moduledb}
      - DB_PORT=${DB_PORT:-5432}
      - BACKEND_URL=${BACKEND_URL:-http://backend:8000}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_started
    volumes:
      - .:/app

volumes:
  redis_data:
  postgres_data:

networks:
  default:
    name: registry_network